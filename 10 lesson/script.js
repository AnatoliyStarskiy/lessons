"use strict";

// Методы и свойства строк и чисел
// Свойства - это характеристики, которые присущи объекту и не изменяются.
// Например, длина строки (length) - это свойство, которое показывает количество символов в строке.

// Методы - это функции, которые принадлежат объекту и могут изменять его или выполнять действия с ним.
// Например, метод toUpperCase() - преобразует строку в верхний регистр.

const str = "test";
console.log(str.length); // 4 - длина строки

const arr = [1, 2, 4];
console.log(arr.length); // 3 - длина массива

console.dir(str); // Показывает структуру строки в консоли
console.dir(arr); // Показывает структуру массива в консоли

console.log(str[2]); // 's' - доступ к символу по индексу


// Методы измениния регистра
// toUpperCase() - преобразует строку в верхний регистр
// toLowerCase() - преобразует строку в нижний регистр
// Эти методы не изменяют исходную строку, а возвращают новую строку.
// Строки в JavaScript - это неизменяемые (immutable) данные.
// Это значит, что любые методы, которые изменяют строку, на самом деле создают новую строку.

console.log(str.toUpperCase()); // 'TEST' - преобразование строки в верхний регистр
console.log(str.toLowerCase()); // 'test' - преобразование строки в нижний регистр

// Методы поиска в строке
// indexOf(substring, start) - ищет подстроку в строке и возвращает индекс первого вхождения или -1, если не найдено
// substring - подстрока, которую ищем
// start - индекс, с которого начинается поиск (по умолчанию 0)
// Если подстрока не найдена, возвращается -1
// Поиск чувствителен к регистру
// Например, 'A' и 'a' считаются разными символами
// Если нужно найти все вхождения подстроки, можно использовать цикл с indexOf и обновлять стартовый индекс

let fruit = "Some fruit";

console.log(fruit.indexOf("fruit")); // 5 - индекс начала подстроки 'fruit'
console.log(fruit.indexOf("q")); // -1 - подстрока не найдена
console.log(fruit.indexOf("S")); // 0 - поиск чувствителен к регистру
console.log(fruit.indexOf("s")); // 2 - поиск чувствителен к регистру
console.log(fruit.indexOf("FruIt".toLowerCase())); // 5 - поиск чувствителен к регистру
console.log(fruit.toLowerCase().indexOf("FRUIT".toLowerCase())); // 0 - поиск не чувствителен к регистру


// Поиск последнего вхождения подстроки
// lastIndexOf(substring, start) - ищет подстроку в строке и возвращает индекс последнего вхождения или -1, если не найдено
// start - индекс, с которого начинается обратный поиск (по умолчанию конец строки)

// Методы извлечения части строки

const logg = "Hello world";

// slice, substring, substr

// slice(start, end) - извлекает часть строки от start до end (не включая end)

console.log(logg.slice(6, 11)); // 'world' - извлечение подстроки с 6 по 11 индекс (не включая 11)
console.log(logg.slice(6)); // 'world' - извлечение подстроки с 6 индекса до конца строки
console.log(logg.slice(logg.indexOf("world"))); // 'world' - извлечение подстроки начиная с индекса 'w'
console.log(logg.slice(-5, -1)); // 'worl' - извлечение подстроки с конца строки
console.log(logg.slice(-5)); // 'world' - извлечение подстроки с конца строки

// substring(start, end) - извлекает часть строки от start до end (не включая end), не поддерживает отрицательные индексы

console.log(logg.substring(6, 11)); // 'world' - извлечение подстроки с 6 по 11 индекс (не включая 11)
console.log(logg.substring(6)); // 'world' - извлечение подстроки с 6 индекса до конца строки
console.log(logg.substring(-5)); // 'Hello world' - извлечение подстроки с 6 индекса до конца строки
console.log(logg.substring(6, -1)); // 'Hello ' - извлечение подстроки с 0 по 6 индекс (не включая 6)

// substr(start, length) - извлекает часть строки от start длиной length, поддерживает отрицательные индексы

console.log(logg.substr(6, 5)); // 'world' - извлечение подстроки с 6 индекса длиной 5 символов
console.log(logg.substr(6)); // 'world' - извлечение подстроки с 6 индекса до конца строки
console.log(logg.substr(-5, 4)); // 'worl' - извлечение подстроки с конца строки длиной 4 символа   
console.log(logg.substr(-5)); // 'world' - извлечение подстроки с конца строки

// Методы чисел

// Методы и свойства чисел (Number) и глобального объекта Math
// Свойства - это характеристики, которые присущи объекту и не изменяются.
// Например, MAX_VALUE - это свойство, которое показывает максимальное значение числа в JavaScript.
// Методы - это функции, которые принадлежат объекту и могут изменять его или выполнять действия с ним.
// Например, метод toFixed() - округляет число до заданного количества знаков после запятой.

const num = 12.2;

console.log(Math.round(num)); // 12 - округление числа до ближайшего целого
console.log(Math.floor(num)); // 12 - округление числа вниз
console.log(Math.ceil(num)); // 13 - округление числа вверх
console.log(parseInt("12.2px")); // 12 - преобразование строки в целое число
console.log(parseFloat("12.2px")); // 12.2 - преобразование строки в число с плавающей точкой
console.log(parseFloat("12.2.5px")); // 12.2 - преобразование строки в число с плавающей точкой, игнорирует вторую точку

