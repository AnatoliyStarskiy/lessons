"use strict";

// Какое будет выведено значение: let x = 5; alert( x++ ); ? // 5 - постфиксная форма возвратит текущее значение, а потом увеличит на 1
// Чему равно такое выражение: [ ] + false - null + true ? NaN - пустой массив преобразуется в пустую строку, дальше идет конкатенация со строкой "false", потом попытка вычесть null из строки, что дает NaN, и прибавление true к NaN дает NaN
// Что выведет этот код: let y = 1; let x = y = 2; alert(x); ? // 2 - присваивание справа налево, сначала y=2, потом x=y
// Чему равна сумма [ ] + 1 + 2? // "12" - пустой массив преобразуется в пустую строку, дальше идет конкатенация со строкой "1", потом конкатенация со строкой "2", что дает "12"
// Что выведет этот код: alert( &quot;1&quot;[0] )? // "1" - строка ведет себя как массив символов, доступ по индексу
// Чему равно 2 &amp;&amp; 1 &amp;&amp; null &amp;&amp; 0 &amp;&amp; undefined ? // null - оператор && возвращает первое ложное значение или последнее истинное
// Есть ли разница между выражениями? !!( a &amp;&amp; b ) и (a &amp;&amp; b)? //  да, первое выражение приводит результат к булеву типу, второе возвращает значение a или b
// Что выведет этот код: alert( null || 2 &amp;&amp; 3 || 4 ); ? // 3 - оператор && имеет приоритет над ||, поэтому сначала вычисляется 2 && 3, что дает 3, дальше null || 3 дает 3, и 3 || 4 дает 3
// a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ? // false - разные объекты в памяти
// Что выведет этот код: alert( +&quot;Infinity&quot; ); ? // Infinity - унарный плюс преобразует строку в число
// Верно ли сравнение: &quot;Ёжик&quot; &gt; &quot;яблоко&quot;? // false - сравнение строк происходит по Unicode, и "Ё" имеет меньший код, чем "я"
// Чему равно 0 || &quot;&quot; || 2 || undefined || true || falsе ? // 2 - оператор || возвращает первое истинное значение